
==================== FINAL INTERFACE ====================
2018-05-11 01:11:16.421399 UTC

interface emoji-pasta-0.1.0.0-18ybUXJZR2xFIxGjJBlWrT:Lib 8022
  interface hash: 0890c123180a19897901e840c92cd416
  ABI hash: ec5dfc0ab479add0a222967437097d9c
  export-list hash: 05597b8577a8a460592541407f613fbb
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d3f9096bac2e1e79f6ff76d0840aa157
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.parseSentence
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0 split-0.2.3.3
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  split-0.2.3.3:Data.List.Split d6f07f97ee293e86e1952e7427bfffa3
import  -/  split-0.2.3.3:Data.List.Split.Internals 07f8f22ebfb54f941d103ac266ac982b
3600ffd7e077f824751fd7570c3cbb94
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule3 Lib.$trModule1) -}
610dc8e9ca5f3e3d198b151526f9cba0
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule2) -}
12b1a4d17d6dbe2d9e2f97a47e53683d
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lib"#) -}
73ff4288bc03a841dba793aaafaaff53
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule4) -}
934ba7ec66c4dd60348bfd949a22f522
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("emoji-pasta-0.1.0.0-18ybUXJZR2xFIxGjJBlWrT"#) -}
5af4382a8ee01459ce3c7ec64828bd75
  parseSentence :: GHC.Base.String -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta1 :: [GHC.Types.Char]) ->
                 GHC.Base.map
                   @ (Data.List.Split.Internals.Chunk GHC.Types.Char)
                   @ [GHC.Types.Char]
                   (Data.List.Split.Internals.fromElem @ GHC.Types.Char)
                   (Data.List.Split.Internals.$wpostProcess
                      @ GHC.Types.Char
                      Data.List.Split.Internals.Drop
                      Data.List.Split.Internals.KeepBlankFields
                      Data.List.Split.Internals.KeepBlank
                      Data.List.Split.Internals.KeepBlank
                      (Data.List.Split.Internals.splitInternal
                         @ GHC.Types.Char
                         Lib.parseSentence_s
                           `cast`
                         (Sym (Data.List.Split.Internals.N:Delimiter[0] <GHC.Types.Char>_R))
                         eta1))) -}
8546092ce68f097c191ee4fc99bca846
  parseSentence1 ::
    GHC.Types.Char
    -> [GHC.Types.Char -> GHC.Types.Bool]
    -> [GHC.Types.Char -> GHC.Types.Bool]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><L,U>m2,
     Unfolding: (\ (x :: GHC.Types.Char)
                   (ys :: [GHC.Types.Char -> GHC.Types.Bool])[OneShot] ->
                 GHC.Types.:
                   @ (GHC.Types.Char -> GHC.Types.Bool)
                   (GHC.Classes.eqChar x)
                   ys) -}
ebeeab1d79a6b1dd0523ee9dc70b6bb3
  parseSentence2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" "#) -}
1c3f99cc8431525a4339d7cc7bf7ef2c
  parseSentence_s :: [GHC.Types.Char -> GHC.Types.Bool]
  {- Unfolding: (GHC.CString.unpackFoldrCString#
                   @ [GHC.Types.Char -> GHC.Types.Bool]
                   Lib.parseSentence2
                   Lib.parseSentence1
                   (GHC.Types.[] @ (GHC.Types.Char -> GHC.Types.Bool))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

